{"version":3,"file":"static/js/231.1a423fe8.chunk.js","mappings":"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","sources":["pages/sign_up.js","services/firebase.js"],"sourcesContent":["import { useState, useEffect, useContext } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport FirebaseContext from '../context/firebase';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { doesUsernameExist } from '../services/firebase';\r\n\r\nexport default function SignUp() {\r\n  const navigate = useNavigate();\r\n  const { firebase } = useContext(FirebaseContext);\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [fullName, setFullName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const isInvalid = password === '' || email === '';\r\n\r\n  const handleSignUp = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const usernameExists = await doesUsernameExist(username);\r\n    if (!usernameExists) {\r\n      try {\r\n        const createdUserResult = await firebase\r\n          .auth()\r\n          .createUserWithEmailAndPassword(email, password);\r\n        // Authentication\r\n        // with email and password and username (displayName)\r\n        await createdUserResult.user.updateProfile({\r\n          displayName: username\r\n        });\r\n        // firebase user collection (create a document)\r\n        await firebase.firestore().collection('users').add({\r\n          userId: createdUserResult.user.uid,\r\n          username: username.toLocaleLowerCase(),\r\n          fullName,\r\n          emailAddress: email.toLocaleLowerCase(),\r\n          following: [],\r\n          dateCreated: Date.now()\r\n        });\r\n        navigate(ROUTES.DASHBOARD);\r\n      } catch (error) {\r\n        setUsername('');\r\n        setFullName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setError(error.message);\r\n      }\r\n    } else {\r\n      setError('This username already exists! Please try another.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line no-undef\r\n    document.title = 'Sign Up - Instagram';\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container flex mx-auto max-w-screen-md items-center h-screen\">\r\n      <div className=\"flex w-3/5 justify-end\">\r\n        <img\r\n          src=\"/images/iphone-with-profile.jpg\"\r\n          alt=\"iPhone with Instagram on it\"\r\n          className=\"max-h-96\"\r\n        />\r\n      </div>\r\n      <div className=\"flex flex-col w-2/5\">\r\n        <div className=\"flex flex-col items-center bg-white p-4 border border-gray-primary mb-4 rounded\">\r\n          <h1 className=\"flex justify-center w-full\">\r\n            <img src=\"/images/logo.png\" alt=\"Instagram\" className=\"mt-2 w-6/12 mb-4\" />\r\n          </h1>\r\n          {error && <p className=\"mb-4 text-xs text-red-primary\">{error}</p>}\r\n          <form onSubmit={handleSignUp} method=\"POST\">\r\n            <input\r\n              aria-label=\"Enter your username\"\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              className=\"text-sm text-gray-base w-full mr-3 py-5 px-5 h-2 \r\n            border border-gray-primary rounded mb-2\"\r\n              onChange={({ target }) => setUsername(target.value)}\r\n              value={username}\r\n            />\r\n            <input\r\n              aria-label=\"Enter your full name\"\r\n              type=\"text\"\r\n              placeholder=\"Full Name\"\r\n              className=\"text-sm text-gray-base w-full mr-3 py-5 px-5 h-2 \r\n            border border-gray-primary rounded mb-2\"\r\n              onChange={({ target }) => setFullName(target.value)}\r\n              value={fullName}\r\n            />\r\n            <input\r\n              aria-label=\"Enter your email address\"\r\n              type=\"text\"\r\n              placeholder=\"Email address\"\r\n              className=\"text-sm text-gray-base w-full mr-3 py-5 px-5 h-2 \r\n            border border-gray-primary rounded mb-2\"\r\n              onChange={({ target }) => setEmail(target.value)}\r\n              value={email}\r\n            />\r\n            <input\r\n              aria-label=\"Enter your password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              className=\"text-sm text-gray-base w-full mr-3 py-5 px-5 h-2 \r\n            border border-gray-primary rounded mb-2\"\r\n              onChange={({ target }) => setPassword(target.value)}\r\n              value={password}\r\n            />\r\n            <button\r\n              disabled={isInvalid}\r\n              type=\"submit\"\r\n              className={`bg-blue-medium text-white w-full rounded h-8 font-bold ${\r\n                isInvalid && 'opacity-50'\r\n              }\r\n            `}\r\n            >\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"flex justify-center items-center flex-col w-full by-white p-4 border border-gray-primary rounded\">\r\n          <p className=\"text-sm\">\r\n            Have an account?{` `}\r\n            <Link to={ROUTES.LOGIN} className=\"font-bold text-blue-medium\">\r\n              Login\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { firebase, FieldValue } from '../lib/firebase';\r\n\r\nexport async function doesUsernameExist(username) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .where('username', '==', username.toLowerCase())\r\n    .get();\r\n\r\n  return result.docs.map((user) => user.data().length > 0).length > 0;\r\n}\r\n\r\nexport async function getUserByUsername(username) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .where('username', '==', username.toLowerCase())\r\n    .get();\r\n\r\n  return result.docs.map((item) => ({\r\n    ...item.data(),\r\n    docId: item.id\r\n  }));\r\n}\r\n\r\nexport async function searchUserByUsername(searchTerm) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection('users')\r\n    // .where('username', '==', searchTerm.toLowerCase())\r\n    .get();\r\n\r\n  const profiles = result.docs\r\n    .map((item) => ({\r\n      ...item.data(),\r\n      docId: item.id\r\n    }))\r\n    .filter((item) => item.username.includes(searchTerm.toLowerCase()));\r\n  return profiles.length > 0 ? profiles : [{ docId: 0, username: 'No results found' }];\r\n}\r\n\r\nexport async function getUserByUserId(userId) {\r\n  const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\r\n  const user = result.docs.map((item) => ({\r\n    ...item.data(),\r\n    docId: item.id\r\n  }));\r\n  return user;\r\n}\r\n\r\nexport async function getSuggestedProfiles(userId, following) {\r\n  const result = await firebase.firestore().collection('users').limit(10).get();\r\n  return result.docs\r\n    .map((user) => ({\r\n      ...user.data(),\r\n      docId: user.id\r\n    }))\r\n    .filter((profile) => profile.userId !== userId && !following.includes(profile.userId));\r\n}\r\n\r\nexport async function updateProfileFollowers(profileDocId, loggedInUserId, isFollowingProfile) {\r\n  return firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .doc(profileDocId)\r\n    .update({\r\n      followers: !isFollowingProfile\r\n        ? FieldValue.arrayUnion(loggedInUserId)\r\n        : FieldValue.arrayRemove(loggedInUserId)\r\n    })\r\n    .then((_) => console.info('Success'))\r\n    .catch((error) => {\r\n      console.error('Error adding followers', error);\r\n    });\r\n}\r\n\r\nexport async function updateUserFollowing(loggedInUserDocId, followerId, isFollowingProfile) {\r\n  return firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .doc(loggedInUserDocId)\r\n    .update({\r\n      following: !isFollowingProfile\r\n        ? FieldValue.arrayUnion(followerId)\r\n        : FieldValue.arrayRemove(followerId)\r\n    })\r\n    .then((_) => console.info('Success'))\r\n    .catch((error) => {\r\n      console.error('Error adding following', error);\r\n    });\r\n}\r\n\r\nexport async function getPhotosByIds(userId, followingIds) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection('photos')\r\n    .where('userId', 'in', followingIds)\r\n    .get();\r\n\r\n  const profilePhotos = result.docs.map((photo) => ({\r\n    ...photo.data(),\r\n    docId: photo.id\r\n  }));\r\n\r\n  const photosWithUserDetails = await Promise.all(\r\n    profilePhotos.map(async (photo) => {\r\n      let userLikedPhoto = false;\r\n      if (photo.likes.includes(userId)) {\r\n        userLikedPhoto = true;\r\n      }\r\n      const user = await getUserByUserId(photo.userId);\r\n      const { username } = user[0];\r\n      return { username, ...photo, userLikedPhoto };\r\n    })\r\n  );\r\n\r\n  return photosWithUserDetails;\r\n}\r\n\r\nexport async function getPhotoByPhotoId(photoId, loggedInUserId) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection('photos')\r\n    .where('photoId', '==', photoId)\r\n    .get();\r\n\r\n  const profilePhoto = result.docs.map((photo) => ({\r\n    ...photo.data(),\r\n    docId: photo.id\r\n  }));\r\n\r\n  const photo = await Promise.all(\r\n    profilePhoto.map(async (photo) => {\r\n      let userLikedPhoto = false;\r\n      if (loggedInUserId && photo.likes.includes(loggedInUserId)) {\r\n        userLikedPhoto = true;\r\n      }\r\n      const user = await getUserByUserId(photo.userId);\r\n      const { username } = user[0];\r\n      return { username, ...photo, userLikedPhoto };\r\n    })\r\n  );\r\n  return photo;\r\n}\r\n\r\nexport async function getUserPhotosByUserId(userId, loggedInUserId) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection('photos')\r\n    .where('userId', '==', userId)\r\n    .get();\r\n\r\n  // const photos = result.docs.map((photo) => ({\r\n  //   ...photo.data(),\r\n  //   docId: photo.id\r\n  // }));\r\n\r\n  const photos = result.docs.map((photo) => {\r\n    let userLikedPhoto = false;\r\n    if (photo?.data().likes?.includes(loggedInUserId)) {\r\n      userLikedPhoto = true;\r\n    }\r\n    return {\r\n      ...photo.data(),\r\n      userLikedPhoto,\r\n      docId: photo.id\r\n    };\r\n  });\r\n\r\n  return photos;\r\n}\r\n\r\nexport async function isUserFollowingProfile(loggedInUsername, profileUserId) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .where('username', '==', loggedInUsername.toLowerCase())\r\n    .where('following', 'array-contains', profileUserId)\r\n    .get();\r\n  const response = result.docs.map((item) => ({\r\n    ...item.data(),\r\n    docId: item.id\r\n  }));\r\n\r\n  return response.length > 0;\r\n}\r\n\r\nexport async function toggleFollow(\r\n  isFollowingProfile,\r\n  activeUserDocId,\r\n  profileDocId,\r\n  profileUserId,\r\n  followingUserId\r\n) {\r\n  await updateUserFollowing(activeUserDocId, profileUserId, isFollowingProfile);\r\n  await updateProfileFollowers(profileDocId, followingUserId, isFollowingProfile);\r\n}\r\n"],"names":["SignUp","navigate","useNavigate","firebase","useContext","FirebaseContext","useState","username","setUsername","fullName","setFullName","email","setEmail","password","setPassword","error","setError","isInvalid","handleSignUp","event","preventDefault","doesUsernameExist","auth","createUserWithEmailAndPassword","createdUserResult","user","updateProfile","displayName","firestore","collection","add","userId","uid","toLocaleLowerCase","emailAddress","following","dateCreated","Date","now","ROUTES","message","useEffect","document","title","className","src","alt","onSubmit","method","type","placeholder","onChange","target","value","disabled","to","where","toLowerCase","get","result","docs","map","data","length","getUserByUsername","item","docId","id","searchUserByUsername","searchTerm","profiles","filter","includes","getUserByUserId","getSuggestedProfiles","limit","profile","updateProfileFollowers","profileDocId","loggedInUserId","isFollowingProfile","doc","update","followers","FieldValue","then","_","console","info","catch","updateUserFollowing","loggedInUserDocId","followerId","getPhotosByIds","followingIds","profilePhotos","photo","Promise","all","userLikedPhoto","likes","photosWithUserDetails","getPhotoByPhotoId","photoId","profilePhoto","getUserPhotosByUserId","photos","isUserFollowingProfile","loggedInUsername","profileUserId","response","toggleFollow","activeUserDocId","followingUserId"],"sourceRoot":""}